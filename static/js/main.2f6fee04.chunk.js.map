{"version":3,"sources":["Components/App/Searchbar/index.jsx","Components/App/ImageGallery/ImageGalleryItem.jsx","Components/App/ImageGallery/index.jsx","Components/App/Button/index.jsx","Components/App/Modal/index.jsx","Utils/pnotify.js","Utils/imageFinder.js","Components/App/Loader/index.jsx","Components/App/App.js","index.js"],"names":["Searchbar","onSubmit","className","type","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","url","large","tags","src","alt","data-large","ImageGallery","images","onClick","map","image","webformatURL","largeImageURL","id","Button","Modal","tag","pushError","err","error","text","addClass","setTimeout","removeError","errorRef","document","querySelector","remove","defaults","styling","icons","hide","stack","ImageFinder","key","perPage","this","APIURL","count","searchQuery","query","length","fetch","searchURL","response","json","result","ok","hits","message","Loader","color","height","width","timeout","Component","App","state","imageSet","spin","imageFinder","handleSubmit","e","a","preventDefault","value","target","elements","search","setState","fetchResult","loadMore","openModal","nodeName","dataset","getAttribute","closeOnClick","classList","contains","removeListeners","closeOnPress","code","window","removeEventListener","prevProps","addEventListener","scrollTo","top","documentElement","scrollHeight","behavior","more","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f6fee04.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={onSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n        <input\r\n          name=\"search\"\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { Searchbar };\r\n","import PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ url, large, tags }) => {\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        src={url}\r\n        alt={tags}\r\n        data-large={large}\r\n        className=\"ImageGalleryItem-image\"\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  large: PropTypes.string.isRequired,\r\n  tags: PropTypes.string.isRequired,\r\n};\r\n\r\nexport { ImageGalleryItem };\r\n","import PropTypes from 'prop-types';\r\nimport { ImageGalleryItem } from './ImageGalleryItem';\r\n\r\nconst ImageGallery = ({ images, onClick }) => {\r\n  return (\r\n    <ul className=\"ImageGallery\" onClick={onClick}>\r\n      {images &&\r\n        images.map(image => (\r\n          <ImageGalleryItem\r\n            key={image.id}\r\n            url={image.webformatURL}\r\n            large={image.largeImageURL}\r\n            tags={image.tags}\r\n          />\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { ImageGallery };\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <button className=\"Button\" onClick={onClick}>\r\n      Load More\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { Button };\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ image, tag }) => {\r\n  return (\r\n    <div className=\"Overlay\">\r\n      <div className=\"Modal\">\r\n        <img src={image} alt={tag} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  image: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n};\r\n\r\nexport { Modal };\r\n","import { error, defaults } from '@pnotify/core';\r\nimport '@pnotify/core/dist/PNotify.css';\r\nimport '@pnotify/core/dist/Material.css';\r\nimport 'material-design-icons/iconfont/material-icons.css';\r\ndefaults.styling = 'material';\r\ndefaults.icons = 'material';\r\ndefaults.hide = false;\r\ndefaults.remove = false;\r\ndelete defaults.stack;\r\n\r\nfunction pushError(err) {\r\n  error({\r\n    text: `${err}`,\r\n    type: 'error',\r\n    addClass: 'error',\r\n  });\r\n  setTimeout(() => {\r\n    removeError();\r\n  }, 5000);\r\n}\r\n\r\nfunction removeError() {\r\n  const errorRef = document.querySelector('.error');\r\n  if (errorRef) errorRef.remove();\r\n}\r\n\r\nexport { pushError, removeError };\r\n","import { pushError, removeError } from './pnotify';\r\n\r\nexport default class ImageFinder {\r\n  constructor(key, perPage) {\r\n    this.APIURL = 'https://pixabay.com/api/';\r\n    this.perPage = perPage;\r\n    this.count = 1;\r\n    this.searchQuery = '';\r\n    this.key = key;\r\n  }\r\n  get searchURL() {\r\n    return (\r\n      this.APIURL +\r\n      '?key=' +\r\n      this.key +\r\n      '&image_type=photo&orientation=horizontal&per_page=' +\r\n      this.perPage +\r\n      '&q='\r\n    );\r\n  }\r\n  clearResult() {\r\n    this.count = 1;\r\n    removeError();\r\n  }\r\n\r\n  async fetchResult(query) {\r\n    if (!query.length) {\r\n      pushError('Enter the search word');\r\n      return [];\r\n    }\r\n    try {\r\n      const response = await fetch(\r\n        this.searchURL + query + '&page=' + this.count,\r\n      );\r\n      const result = await response.json();\r\n      if (response.ok) {\r\n        if (result.hits && !result.hits.length) {\r\n          if (this.count > 1) pushError('No more matches. Try new search');\r\n          pushError('No matches. Try new search');\r\n        }\r\n        this.count += 1;\r\n        return result;\r\n      }\r\n      return pushError(result.message);\r\n    } catch (err) {\r\n      pushError(err.message);\r\n    }\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport LoaderSpinner from 'react-loader-spinner';\r\n\r\nexport default class Loader extends Component {\r\n  render() {\r\n    return (\r\n      <LoaderSpinner\r\n        type=\"Bars\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport { Searchbar } from './Searchbar';\nimport { ImageGallery } from './ImageGallery';\nimport { Button } from './Button';\nimport { Modal } from './Modal';\nimport ImageFinder from '../../Utils/imageFinder';\nimport Loader from './Loader';\n\nexport default class App extends Component {\n  state = {\n    imageSet: [],\n    query: '',\n    large: false,\n    spin: false,\n  };\n\n  imageFinder = new ImageFinder('19116097-91cfda2f798a07cacf5b2db64', 12);\n\n  // function handling submit event of a search form\n  handleSubmit = async e => {\n    e.preventDefault();\n    const value = e.target.elements.search.value;\n    this.imageFinder.count = 1;\n    this.setState({ imageSet: [], spin: true });\n    const { hits } = await this.imageFinder.fetchResult(value);\n    this.setState({ imageSet: hits, query: value, spin: false });\n  };\n\n  // function handling click event on a 'load more' button\n  loadMore = async e => {\n    this.setState({ spin: true });\n    const { hits } = await this.imageFinder.fetchResult(this.state.query);\n    this.setState(({ imageSet }) => {\n      return { imageSet: [...imageSet, ...hits], spin: false };\n    });\n  };\n\n  // functions handling a lightbox logic\n  //#1 openning a lightbox\n  openModal = e => {\n    if (e.target.nodeName !== 'IMG') return;\n    const url = e.target.dataset.large;\n    const tag = e.target.getAttribute('alt');\n    this.setState({ large: { url, tag } });\n  };\n  //#2 closing a lightbox by clicking on a backdrop\n  closeOnClick = e => {\n    if (e.target.classList.contains('Overlay')) {\n      this.setState({ large: false });\n      this.removeListeners();\n    }\n  };\n  //#3 closing a lightbox by pressing Esc\n  closeOnPress = e => {\n    if (e.code === 'Escape') {\n      this.setState({ large: false });\n      this.removeListeners();\n    }\n  };\n  //#4 removing listeners\n  removeListeners = () => {\n    window.removeEventListener('keydown', this.closeOnPress);\n    document.removeEventListener('click', this.closeOnClick);\n  };\n\n  componentDidUpdate(prevProps, { imageSet }) {\n    if (this.state.large) {\n      window.addEventListener('keydown', this.closeOnPress);\n      document.addEventListener('click', this.closeOnClick);\n    }\n    if (this.state.imageSet.length > imageSet.length) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n\n  render() {\n    const { imageSet, spin } = this.state;\n    const more = imageSet.length && imageSet.length % 12 === 0;\n    const { url, tag } = this.state.large;\n\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handleSubmit} value={this.state.query} />\n        <ImageGallery images={imageSet} onClick={this.openModal} />\n        {more && !spin ? <Button onClick={this.loadMore} /> : false}\n        {url ? <Modal image={url} tag={tag} /> : false}\n        {spin ? (\n          <div className=\"Loader\">\n            <Loader />\n          </div>\n        ) : (\n          false\n        )}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}